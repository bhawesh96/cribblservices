<?php
namespace Moto\Filter; use Moto; use Zend; class UriNormalize extends Zend\Filter\UriNormalize { protected $removeFragment = false; public function setRemoveFragment($value) { $this->removeFragment = $value; return $this; } public function filter($value) { $value = parent::filter($value); if (is_string($value)) { try { $defaultScheme = $this->defaultScheme ?: $this->enforcedScheme; if (!Zend\Uri\UriFactory::getRegisteredSchemeClass($defaultScheme)) { $defaultScheme = null; } $uri = Zend\Uri\UriFactory::factory($value, $defaultScheme); if ($this->enforcedScheme && (!$uri->getScheme())) { $this->enforceScheme($uri); } $path = $uri->getPath(); $path = '/' . ltrim($path, '/'); $uri->setPath($path); if ($this->removeFragment) { $uri->setFragment(null); } $value = $uri->toString(); } catch (Zend\Uri\Exception\ExceptionInterface $ex) { return $value; } } return $value; } }