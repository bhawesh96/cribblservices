<?php
namespace Moto\System; use Moto; use Zend\Log\Logger; use Zend\Log\Writer; class Log { protected static $_initialized = false; protected static $_logger; protected static $_enabled = false; public static function init() { if (static::$_initialized) { return; } static::$_initialized = true; static::_initPhpLog(); static::_initMotoLog(); } protected static function _initPhpLog($systemLogDir = null) { error_reporting(E_ALL); @ini_set('display_errors', 'off'); @ini_set('log_errors', 'on'); if (empty($systemLogDir)) { $systemLogDir = Moto\System::getAbsolutePath('@systemLogDir'); } if (!is_dir($systemLogDir)) { Moto\Util::createDir($systemLogDir); } if (!is_writable($systemLogDir)) { return false; } $logFile = $systemLogDir . '/php_errors.log'; if (!file_exists($logFile)) { Moto\Util::filePutContents($logFile, ''); } if (!is_writable($logFile)) { return false; } @ini_set('error_log', $logFile); return true; } protected static function _initMotoLog($systemLogDir = null) { if (empty($systemLogDir)) { $systemLogDir = Moto\System::getAbsolutePath('@systemLogDir'); } if (!is_dir($systemLogDir)) { Moto\Util::createDir($systemLogDir); } if (!is_writable($systemLogDir)) { return false; } static::$_logger = new Logger(); $logFile = $systemLogDir . '/moto.log'; if (!file_exists($logFile)) { Moto\Util::filePutContents($logFile, ''); } if (!is_writable($logFile)) { return false; } static::$_logger->addWriter(new Writer\Stream($logFile)); Logger::registerErrorHandler(static::$_logger); static::$_enabled = true; } public static function getLogger() { return static::$_logger; } public static function emergency($message, $extra = array()) { if (!static::$_enabled) { return false; } static::getLogger()->emerg($message, $extra); } public static function alert($message, $extra = array()) { if (!static::$_enabled) { return false; } static::getLogger()->alert($message, $extra); } public static function critical($message, $extra = array()) { if (!static::$_enabled) { return false; } static::getLogger()->crit($message, $extra); } public static function error($message, $extra = array()) { if (!static::$_enabled) { return false; } static::getLogger()->err($message, $extra); } public static function warning($message, $extra = array()) { if (!static::$_enabled) { return false; } static::getLogger()->warn($message, $extra); } public static function notice($message, $extra = array()) { if (!static::$_enabled) { return false; } static::getLogger()->notice($message, $extra); } public static function info($message, $extra = array()) { if (!static::$_enabled) { return false; } static::getLogger()->info($message, $extra); } public static function debug($message, $extra = array()) { if (!static::$_enabled) { return false; } static::getLogger()->debug($message, $extra); } }