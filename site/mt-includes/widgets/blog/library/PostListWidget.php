<?php
 namespace Website\Widgets\Blog; use Moto; use Website; use Zend\Db\Sql\Where; class PostListWidget extends Website\Widgets\Blog\AbstractPostsWidget { protected $_name = 'blog.post_list'; protected static $_defaultProperties = array( 'spacing' => array( 'top' => 'auto', 'right' => 'auto', 'bottom' => 'auto', 'left' => 'auto', ), 'item_count' => 5, 'read_more_label' => '', 'style' => array( 'title' => array( 'font_style' => 'moto-text_system_7', ), 'meta' => array( 'font_style' => 'moto-text_system_11', ), 'button' => array( 'preset' => '5', 'size' => 'small', ), 'feature_image' => array( 'preset' => 'default', ), 'divider' => array( 'preset' => 'default', ), ), ); protected $_paginator = null; public function getTemplatePath($preset = null) { return '@websiteWidgets/blog/templates/post_list.twig.html'; } public function preRender() { parent::preRender(); $this->_widget['paginator'] = $this->getPaginator(); $this->_widget['pager'] = $this->_paginator->getPages(); } public function getPaginatorPageClass($loop, $prefix = 'moto-pagination-item', $paginator = null) { if (null == $paginator) { $paginator = $this->getPaginator(); } $class = $this->_getLoopClassModificator($loop, array('')); if (!empty($loop['index']) && $loop['index'] == $paginator->getCurrentPageNumber()) { $class[] = $this->_getCssClass(':current'); } $class = $prefix . implode(' ' . $prefix, $class); return $class; } public function getPaginator() { if (null == $this->_paginator) { $table = $this->_getTable(); $where = new Where(); if (!Moto\Website\Application::getInstance()->isPreviewMode()) { $where->lessThanOrEqualTo('published', date('Y-m-d H:i:00', time())); } $where->equalTo('type', 'blog.post'); $where->equalTo('status', Moto\Application\Pages\PageModel::STATUS_PUBLISH); $order = array( 'published' => 'DESC' ); $this->_paginator = $table->getPaginator($where, $order); $this->_paginator->setCurrentPageNumber(Moto\System\Request::getQuery('page', 1)); $this->_paginator->setItemCountPerPage($this->getPropertyValue('item_count')); $this->_paginator->setPageRange(5); } return $this->_paginator; } } 